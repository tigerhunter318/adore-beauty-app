import gql from 'graphql-tag'

export default gql`
  query ProductPageQuery($identifier: String, $productId: Int, $locale: String, $model: String, $sku: String) {
    products(identifier: $identifier, product_id: $productId, model: $model, sku: $sku) {
      name
      identifier
      cartProductId
      comestri_product_id
      price
      specialPrice
      oldPrice
      identifier
      brand_identifier_s
      product_url
      productSku
      productImage
      productImages
      productVideos
      product_id
      productType
      reviewAverage
      reviewTotal
      brand_id
      brand_name
      brand_url
      brand_logo
      has_special_price
      productSalesLastWeek
      productSales
      saving_f
      is_visible_in_catalog
      product_status
      qty
      shipping_group
      visibility
      inStock
      size
      afterpayInstallments
      recommendPercentage
      recommendPercentageText
      savingPercentage
      isWaitList
      nextDeliveryMessage
      isSalable
      top_rated_i
      backorders
      valuedAt
      giftcardType
      allowOpenAmount
      openAmountMin
      openAmountMax
      giftcard_amounts_nonindex
      score
      choices_facet
      reviewAverage
      description
      howToUse
      ingredients
      reviewTotal
      short_description
      choices_t_mv
      category_badge_name
      nextDeliveryMessage
      review_star_counts
      ec_category_nonindex
      manufacturer
      category_name
      display_type
      categories {
        id
        url
        title
        name
      }
      most_helpful_positive {
        id
        title
        product_id
        review_id
        nickname
        detail
        helpful_count
        not_helpful
        rating_value
        verified_purchaser
        created_at
      }
      most_helpful_critic {
        id
        title
        product_id
        review_id
        nickname
        detail
        helpful_count
        not_helpful
        rating_value
        verified_purchaser
        created_at
      }
      attributeOptions {
        option_id
        image_url
        color
        cartProductId
        productSku
        isSalable
        price
        oldPrice
        main_image_url
        product_id
      }
      findation
    }
    routines: richContent(locale: $locale, type: "routines", rows: 2, model: $model) {
      sysId
      title
      type
      url
      image
      category_name
      type
      updatedAt
      routineDifficulty
      routineTime
      routineCost
      author_name
      author_url
      author_avatar
    }
  }
`
